version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: thamaneya_postgres
    environment:
      POSTGRES_DB: thamaneya
      POSTGRES_USER: thamaneya_user
      POSTGRES_PASSWORD: thamaneya_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - thamaneya_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U thamaneya_user -d thamaneya"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: thamaneya_backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_NAME: thamaneya
      DATABASE_USER: thamaneya_user
      DATABASE_PASSWORD: thamaneya_password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - thamaneya_network
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: thamaneya_frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001
      REACT_APP_ENVIRONMENT: development
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - thamaneya_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  thamaneya_network:
    driver: bridge 